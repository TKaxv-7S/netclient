name: Build and Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Netclient version'
        required: true
  release:
    types: [published]

jobs:
  version:
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.echo.outputs.tag }}
      version: ${{ steps.echo.outputs.version }}
    steps:
      - name: Get Version Number
        run: |
          if [[ -n "${{ github.event.inputs.version }}" ]]; then
            NETMAKER_VERSION=${{ github.event.inputs.version }}
          else
            NETMAKER_VERSION=$(curl -fsSL https://api.github.com/repos/gravitl/netmaker/tags | grep 'name' | head -1 | cut -d'"' -f4)
          fi
          echo "NETMAKER_VERSION=${NETMAKER_VERSION}" >> $GITHUB_ENV
          # remove everything but digits and . for package (deb, rpm, etc) versions
          PACKAGE_VERSION=$(echo ${NETMAKER_VERSION} | tr -cd '[:digit:].')
          echo "PACKAGE_VERSION=${PACKAGE_VERSION}" >> $GITHUB_ENV
      - name: Echo
        id: echo
        run: |
          echo ${{ env.NETMAKER_VERSION }}
          echo ${{ env.PACKAGE_VERSION }}
          if [[ -z ${{ env.NETMAKER_VERSION }} || -z ${{ env.PACKAGE_VERSION }} ]]
          then
            exit 1
          fi
          echo "::set-output name=tag::${{ env.NETMAKER_VERSION }}"
          echo "::set-output name=version::${{ env.PACKAGE_VERSION }}"
  
  netclient-linux-headless:
    runs-on: ubuntu-latest
    needs: version
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup go
        uses: actions/setup-go@v3
        with:
          go-version: 1.19
      - name: Run GoReleaser
        uses: actions/goreleaser-action@v4
        with:
          args: release --clean

  netclient-freebsd:
    runs-on: ubuntu-latest
    needs: version
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set Variables
        run: |
          TAG=${{needs.version.outputs.tag}}
          VERSION=${{needs.version.outputs.version}}
          echo "NETMAKER_VERSION=${TAG}"  >> $GITHUB_ENV
          echo "PACKAGE_VERSION=${VERSION}" >> $GITHUB_ENV
      - name: Setup go
        uses: actions/setup-go@v3
        with:
          go-version: 1.19
      - name: Build
        run: |
          cd netclient
          env CGO_ENABLED=0 GOOS=freebsd GOARCH=amd64 go build -tags headless -ldflags="-X 'main.version=${NETMAKER_VERSION}'" -o build/netclient-freebsd/netclient .
          env CGO_ENABLED=0 GOOS=freebsd GOARCH=arm GOARM=5 go build -tags headless -ldflags="-X 'main.version=${NETMAKER_VERSION}'" -o build/netclient-freebsd-arm5/netclient .
          env CGO_ENABLED=0 GOOS=freebsd GOARCH=arm GOARM=6 go build -tags headless -ldflags="-X 'main.version=${NETMAKER_VERSION}'" -o build/netclient-freebsd-arm6/netclient .
          env CGO_ENABLED=0 GOOS=freebsd GOARCH=arm GOARM=7 go build -tags headless -ldflags="-X 'main.version=${NETMAKER_VERSION}'" -o build/netclient-freebsd-arm7/netclient .
            env CGO_ENABLED=0 GOOS=freebsd GOARCH=arm64 go build -tags headless -ldflags="-X 'main.version=${NETMAKER_VERSION}'" -o build/netclient-freebsd-arm64/netclient .

      - name: Upload freebsd to Release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: netclient/build/netclient-freebsd/netclient
          tag: ${{ env.NETMAKER_VERSION }}
          overwrite: true
          prerelease: true
          asset_name: netclient-freebsd-amd64

      - name: Upload freebsd-arm5 to Release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: netclient/build/netclient-freebsd-arm5/netclient
          tag: ${{ env.NETMAKER_VERSION }}
          overwrite: true
          prerelease: true
          asset_name: netclient-freebsd-arm5

      - name: Upload freebsd-arm6 to Release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: netclient/build/netclient-freebsd-arm6/netclient
          tag: ${{ env.NETMAKER_VERSION }}
          overwrite: true
          prerelease: true
          asset_name: netclient-freebsd-arm6

      - name: Upload freebsd-arm7 to Release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: netclient/build/netclient-freebsd-arm7/netclient
          tag: ${{ env.NETMAKER_VERSION }}
          overwrite: true
          prerelease: true
          asset_name: netclient-freebsd-arm7

      - name: Upload freebsd-arm64 to Release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: netclient/build/netclient-freebsd-arm64/netclient
          tag: ${{ env.NETMAKER_VERSION }}
          overwrite: true
          prerelease: true
          asset_name: netclient-freebsd-arm64

  netclient-darwin:
    runs-on: macos-latest
    needs: version
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set Variables
        run: |
          TAG=${{needs.version.outputs.tag}}
          VERSION=${{needs.version.outputs.version}}
          echo "NETMAKER_VERSION=${TAG}"  >> $GITHUB_ENV
          echo "PACKAGE_VERSION=${VERSION}" >> $GITHUB_ENV
      - name: Setup go
        uses: actions/setup-go@v3
        with:
          go-version: 1.19
      - name: Build
        run: |
          cd netclient
          env GOOS=darwin GOARCH=amd64 go build -tags=desktop,production -ldflags="-s -w -X 'main.version=${NETMAKER_VERSION}'" -o build/netclient-darwin/netclient .
          env CGO_ENABLED=1 GOOS=darwin GOARCH=arm64 go build -tags=desktop,production -ldflags="-s -w -X 'main.version=${NETMAKER_VERSION}'" -o build/netclient-darwin-arm64/netclient main.go
      - name: Upload darwin-amd64 to Release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: netclient/build/netclient-darwin/netclient
          tag: ${{ env.NETMAKER_VERSION }}
          overwrite: true
          prerelease: true
          asset_name: netclient-darwin-amd64

      - name: Upload darwin-arm64 to Release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: netclient/build/netclient-darwin-arm64/netclient
          tag: ${{ env.NETMAKER_VERSION }}
          overwrite: true
          prerelease: true
          asset_name: netclient-darwin-arm64

  netclient-windows:
    runs-on: windows-latest
    needs: version
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set Variables
        run: |
          TAG=${{needs.version.outputs.tag}}
          VERSION=${{needs.version.outputs.version}}
          echo "NETMAKER_VERSION=${TAG}"  >> $GITHUB_ENV
          echo "PACKAGE_VERSION=${VERSION}" >> $GITHUB_ENV
        shell: bash
      - name: Setup go
        uses: actions/setup-go@v3
        with:
          go-version: 1.19
      - name: Mysys2 setup
        uses: msys2/setup-msys2@v2
        with:
          install: >-
            git
            mingw-w64-x86_64-toolchain
      - name: Build
        run: |
          echo $(go env GOPATH)/bin >> $GITHUB_PATH
          cd netclient
          go get -v github.com/josephspurrier/goversioninfo
          go install -v github.com/josephspurrier/goversioninfo/cmd/goversioninfo
          go generate
          go build -tags=gui -ldflags="-X 'main.version=${NETMAKER_VERSION}'" -o build/netclient.exe .

      - name: Upload netclient windows to Release
        continue-on-error: true
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: netclient/build/netclient.exe
          tag: ${{ env.NETMAKER_VERSION }}
          overwrite: true
          prerelease: true
          asset_name: netclient.exe

  linux-packages:
    runs-on: ubuntu-latest
    needs: [version, netclient-x86, netclient-arm]
    steps:
      - name: Repository Dispatch
        uses: peter-evans/repository-dispatch@v2.1.1
        with:
          token: ${{ secrets.PERS_TOKEN_FOR_NETMAKER_DEVOPS}}
          repository: gravitl/netmaker-devops
          event-type: build-packages
          client-payload: '{"VERSION": "${{ env.PACKAGE_VERSION }}"}'
